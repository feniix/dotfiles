#### TMUX CONFIGURATION FOR macOS with iTerm2 ####

# Terminal configuration for iTerm2
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colors

# Change prefix to Ctrl+a (more accessible on Mac keyboards)
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Reduce escape-time (important for vim/neovim in iTerm2)
set -sg escape-time 0

# Focus events for vim/tmux integration
set -g focus-events on

# Increase scrollback buffer size
set -g history-limit 50000

# Start window and pane numbering at 1 (easier to reach on keyboard)
set -g base-index 1
setw -g pane-base-index 1

# Automatically renumber windows when one is closed
set -g renumber-windows on

# Mac-friendly window/pane management
# Split panes with | and - (easier to visualize)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
# Also add more Mac-like shortcuts
bind \\ split-window -h -c "#{pane_current_path}"  # No need to press shift for |

# Create new windows with current path
bind c new-window -c "#{pane_current_path}"

# Fast pane switching with Alt+arrow keys (works in iTerm2)
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Quick pane cycling with prefix+a
unbind ^A
bind ^A select-pane -t :.+

# Reload config with prefix+r
unbind r
bind r source-file ~/.tmux.conf \; display "Configuration reloaded!"

# Enable mouse mode (works well with iTerm2)
set -g mouse on

# Better pane resizing
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Use vim keybindings in copy mode (compatible with iTerm2)
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter

# Use Esc to enter copy mode (familiar to vim users)
bind Escape copy-mode

# Double-click to select and copy word
bind -n DoubleClick1Pane select-pane \; copy-mode \; send-keys -X select-word \; send-keys -X copy-pipe-and-cancel "pbcopy"

# Triple-click for line
bind -n TripleClick1Pane select-pane \; copy-mode \; send-keys -X select-line \; send-keys -X copy-pipe-and-cancel "pbcopy"

# Move between windows with Option+number (Mac-like)
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# Smart pane switching with awareness of Vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"

#### SOLARIZED THEME (OPTIMIZED FOR ITERM2) ####

# Status bar design
set -g status-position top
set -g status-justify left
set -g status-style "bg=colour235,fg=colour136"
set -g status-left-length 40
set -g status-left "#[fg=green]#S #[fg=yellow]#I/#P "
set -g status-right "#[fg=cyan]%d %b %R #[fg=colour136]#h"

# Window status
set-window-option -g window-status-style "fg=colour244,bg=default"
set-window-option -g window-status-format "#I:#W#F"
set-window-option -g window-status-current-style "fg=colour166,bg=default"
set-window-option -g window-status-current-format "#I:#W#F"

# Pane border
set -g pane-border-style "fg=colour235"
set -g pane-active-border-style "fg=colour33"

# Message text
set -g message-style "bg=colour235,fg=colour166"

# Pane number display
set -g display-panes-active-colour "colour33"
set -g display-panes-colour "colour166"

# Clock
set-window-option -g clock-mode-colour "colour64"

# Activity
set-window-option -g monitor-activity on
set -g visual-activity off
