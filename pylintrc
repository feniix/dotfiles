[MAIN]

# Analyse import fallback blocks. This can be used to support both Python 2 and
# 3 compatible code, which means that the block might have code that exists
# only in one or another interpreter, leading to false positives when analysed.
analyse-fallback-blocks=no

# Number of processes to use for parallel pylint analysis
jobs=0

# Control the amount of potential inferred values when inferring a single
# object. This can help the performance when dealing with large functions or
# complex, nested conditions.
limit-inference-results=100

# Minimum Python version to use for version dependent checks.
py-version=3.10

# When enabled, pylint would attempt to guess common misconfiguration and emit
# user-friendly hints instead of false-positive error messages.
suggestion-mode=yes

# Allow loading of arbitrary C extensions. Extensions are imported into the
# active Python interpreter and may run arbitrary code.
unsafe-load-any-extension=no


[MESSAGES CONTROL]

# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, CONTROL_FLOW, INFERENCE, INFERENCE_FAILURE,
# UNDEFINED.
confidence=HIGH,
           CONTROL_FLOW,
           INFERENCE,
           INFERENCE_FAILURE,
           UNDEFINED

# Disable the message, report, category or checker with the given id(s).
disable=raw-checker-failed,
        bad-inline-option,
        locally-disabled,
        file-ignored,
        suppressed-message,
        useless-suppression,
        deprecated-pragma,
        use-symbolic-message-instead,
        missing-module-docstring,
        missing-class-docstring,
        missing-function-docstring,
        too-many-arguments,
        too-many-locals,
        too-many-branches,
        too-many-statements,
        too-many-instance-attributes,
        too-few-public-methods,
        too-many-public-methods,
        fixme,
        line-too-long,
        C0103,        # invalid-name (for short variable names)
        C0111,        # missing-docstring (for small functions)
        R0801,        # duplicate-code
        W0511,        # fixme (allows TODOs)
        W0212,        # protected-access (for accessing protected members sometimes)
        W0621,        # redefined-outer-name (for using same names in nested scopes)
        C0330,        # bad-continuation (conflicts with black formatter)
        C0326,        # bad-whitespace (conflicts with black formatter)

# Enable specific messages that would otherwise be suppressed by the above settings
enable=c-extension-no-member


[REPORTS]

# Set the output format. Options: text, parseable, colorized, json
# output-format=colorized

# Tells whether to display a full report or only the messages.
reports=no

# Activate the evaluation score.
score=yes


[LOGGING]

# Format style used to check logging string formatting
logging-format-style=old

# Logging modules to check that the string format arguments are in logging
# function parameter format.
logging-modules=logging


[TYPECHECK]

# List of decorators that produce context managers
contextmanager-decorators=contextlib.contextmanager

# Tells whether to warn about missing members when the owner of the attribute
# is inferred to be None.
ignore-none=yes

# List of classes to ignore in member generation checks
ignored-classes=optparse.Values,
                thread._local,
                _thread._local,
                argparse.Namespace,
                numpy.ndarray,
                numpy,
                pandas.DataFrame,
                pandas.Series,
                pytest,
                torch,
                tensorflow,
                sqlalchemy.orm.scoping.scoped_session

# List of modules to ignore in type checking warnings
ignored-modules=numpy,
                pandas,
                tensorflow,
                torch,
                matplotlib,
                pytest,
                sqlalchemy,
                alembic,
                flask_sqlalchemy


[VARIABLES]

# A regular expression matching the name of dummy variables (i.e. expected to
# not be used).
dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# Argument names that match this expression will be ignored.
ignored-argument-names=_.*|^ignored_|^unused_|args|kwargs

# Tells whether we should check for unused import in __init__ files.
init-import=no


[FORMAT]

# Expected format of line ending
expected-line-ending-format=

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$|^# \S+$

# Number of spaces of indent required inside a hanging or continued line.
indent-after-paren=4

# String used as indentation unit (usually 4 spaces)
indent-string='    '

# Maximum number of characters on a single line.
max-line-length=120

# Maximum number of lines in a module.
max-module-lines=1500


[BASIC]

# Good variable names (additional short names that are common and acceptable)
good-names=i,
           j,
           k,
           ex,
           Run,
           _,
           id,
           db,
           df,
           x,
           y,
           z,
           f,
           e,
           fp,
           fn,
           ok,
           n,
           tz,
           ts,
           T,
           ax,
           logger

# Bad variable names which should always be refused
bad-names=foo,
          bar,
          baz,
          toto,
          tutu,
          tata,
          why,
          because,
          stuff

# Naming style matching correct class names
class-naming-style=PascalCase

# Naming style matching correct function names
function-naming-style=snake_case

# Naming style matching correct method names
method-naming-style=snake_case

# Naming style matching correct variable names
variable-naming-style=snake_case

# Regular expression which should only match functions/methods not requiring a docstring
no-docstring-rgx=^_|^test_|^setup$|^tearDown$|^__.*__$


[DESIGN]

# Maximum number of arguments for function / method.
max-args=8

# Maximum number of attributes for a class.
max-attributes=12

# Maximum number of boolean expressions in an if statement.
max-bool-expr=6

# Maximum number of branch for function / method body.
max-branches=12

# Maximum number of locals for function / method body.
max-locals=20

# Maximum number of statements in function / method body.
max-statements=50


[IMPORTS]

# Allow wildcard imports from modules that define __all__.
allow-wildcard-with-all=yes

# Deprecated modules which should not be used
deprecated-modules=optparse,tkinter.tix

# List of modules that are external dependencies and can be loaded without checking
known-third-party=enchant,
                  numpy,
                  pandas,
                  pytest,
                  tensorflow,
                  torch,
                  sklearn,
                  matplotlib


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught.
overgeneral-exceptions=BaseException,
                       Exception


[SIMILARITIES]

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=yes

# Minimum lines number of a similarity.
min-similarity-lines=8 