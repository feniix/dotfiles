-- Example user configuration
-- Copy this file to `user/config.lua` and customize as needed

local M = {}

-- ══════════════════════════════════════════════════════════════════════
-- CORE CUSTOMIZATIONS
-- ══════════════════════════════════════════════════════════════════════

-- Override vim options
M.options = {
  -- Example: Set different tab settings
  tabstop = 2,
  shiftwidth = 2,
  expandtab = true,
  
  -- Example: Different colorcolumn
  colorcolumn = '100',
  
  -- Example: Custom number settings
  relativenumber = false,
  
  -- Add your custom options here
}

-- Override or add keymaps
M.keymaps = {
  -- Example: Custom leader key mappings
  normal = {
    ['<leader>w'] = ':w<CR>',
    ['<leader>q'] = ':q<CR>',
    ['<C-h>'] = '<C-w>h',
    ['<C-j>'] = '<C-w>j',
    ['<C-k>'] = '<C-w>k',
    ['<C-l>'] = '<C-w>l',
  },
  
  -- Example: Insert mode mappings
  insert = {
    ['jk'] = '<Esc>',
  },
  
  -- Example: Visual mode mappings
  visual = {
    ['<leader>y'] = '"+y',
  },
}

-- Override or add autocommands
M.autocmds = {
  -- Example: Custom file type settings
  {
    event = 'FileType',
    pattern = 'markdown',
    callback = function()
      vim.opt_local.wrap = true
      vim.opt_local.spell = true
    end,
  },
  
  -- Example: Auto-save on focus lost
  {
    event = 'FocusLost',
    pattern = '*',
    command = 'silent! wa',
  },
}

-- ══════════════════════════════════════════════════════════════════════
-- PLUGIN CUSTOMIZATIONS
-- ══════════════════════════════════════════════════════════════════════

M.plugins = {
  -- Add custom plugin specifications
  specs = {
    -- Example: Add a custom UI plugin
    ui = {
      {
        'nvim-tree/nvim-web-devicons',
        event = 'VeryLazy',
      },
      {
        'lukas-reineke/headlines.nvim',
        ft = { 'markdown', 'norg', 'rmd', 'org' },
        config = function()
          require('headlines').setup()
        end,
      },
    },
    
    -- Example: Add custom editor plugins
    editor = {
      {
        'folke/zen-mode.nvim',
        cmd = 'ZenMode',
        config = function()
          require('zen-mode').setup({
            window = {
              width = 120,
              options = {
                number = false,
                relativenumber = false,
              },
            },
          })
        end,
      },
    },
    
    -- Example: Add custom language tools
    lang = {
      {
        'iamcco/markdown-preview.nvim',
        ft = 'markdown',
        build = function()
          vim.fn['mkdp#util#install']()
        end,
        config = function()
          vim.g.mkdp_auto_start = 0
          vim.g.mkdp_auto_close = 1
        end,
      },
    },
  },
  
  -- Override plugin configurations
  config = {
    -- Example: Override telescope settings
    telescope = {
      defaults = {
        layout_strategy = 'horizontal',
        layout_config = {
          horizontal = {
            width = 0.9,
            height = 0.8,
          },
        },
      },
    },
    
    -- Example: Override treesitter settings
    treesitter = {
      ensure_installed = { 'lua', 'vim', 'markdown' },
      highlight = {
        additional_vim_regex_highlighting = true,
      },
    },
    
    -- Example: Override colorscheme settings
    colorscheme = {
      style = 'dark', -- or 'light'
      contrast = 'normal', -- 'normal', 'high', 'soft'
    },
  },
}

-- ══════════════════════════════════════════════════════════════════════
-- LAZY.NVIM CUSTOMIZATIONS
-- ══════════════════════════════════════════════════════════════════════

-- Override lazy.nvim configuration
M.lazy_config = {
  -- Example: Change update checker settings
  checker = {
    enabled = true,
    notify = true,
    frequency = 3600, -- Check every hour
  },
  
  -- Example: Custom UI settings
  ui = {
    border = 'rounded',
    size = {
      width = 0.8,
      height = 0.8,
    },
  },
  
  -- Example: Performance tweaks
  performance = {
    cache = {
      enabled = true,
    },
    rtp = {
      disabled_plugins = {
        'gzip',
        'matchit',
        'matchparen',
        'netrwPlugin',
        'tarPlugin',
        'tohtml',
        'tutor',
        'zipPlugin',
        'rplugin', -- Disable if you don't use remote plugins
      },
    },
  },
}

-- ══════════════════════════════════════════════════════════════════════
-- CUSTOM MODULES
-- ══════════════════════════════════════════════════════════════════════

-- Load additional user modules after setup
M.modules = {
  'my_custom_module',
  'development_workflow',
  'project_specific_settings',
}

-- ══════════════════════════════════════════════════════════════════════
-- POST-SETUP HOOK
-- ══════════════════════════════════════════════════════════════════════

-- Custom logic to run after all setup is complete
function M.post_setup()
  -- Example: Set up custom commands
  vim.api.nvim_create_user_command('ReloadConfig', function()
    vim.cmd('source ~/.config/nvim/init.lua')
    print('Configuration reloaded!')
  end, {})
  
  -- Example: Set up custom highlights
  vim.api.nvim_set_hl(0, 'CustomHighlight', {
    fg = '#ff0000',
    bg = '#000000',
    bold = true,
  })
  
  -- Example: Set up custom statusline components
  if vim.g.loaded_lualine then
    require('lualine').setup({
      sections = {
        lualine_x = {
          'encoding',
          'fileformat',
          'filetype',
          function()
            return '󰅒 Custom'
          end,
        },
      },
    })
  end
  
  -- Example: Project-specific settings
  local project_nvimrc = vim.fn.getcwd() .. '/.nvimrc.lua'
  if vim.fn.filereadable(project_nvimrc) == 1 then
    dofile(project_nvimrc)
  end
  
  -- Example: Custom key mappings that need to be set after plugins load
  vim.keymap.set('n', '<leader>zz', function()
    if vim.g.loaded_zen_mode then
      vim.cmd('ZenMode')
    else
      print('ZenMode not available')
    end
  end, { desc = 'Toggle Zen Mode' })
end

-- ══════════════════════════════════════════════════════════════════════
-- CONDITIONAL CUSTOMIZATIONS
-- ══════════════════════════════════════════════════════════════════════

-- Example: Platform-specific settings
if vim.fn.has('mac') == 1 then
  M.options = vim.tbl_extend('force', M.options or {}, {
    guifont = 'SF Mono:h14',
  })
elseif vim.fn.has('unix') == 1 then
  M.options = vim.tbl_extend('force', M.options or {}, {
    guifont = 'Ubuntu Mono 14',
  })
end

-- Example: Work vs personal configurations
local hostname = vim.fn.hostname()
if string.match(hostname, 'work') then
  -- Work-specific settings
  M.plugins.specs.tools = {
    {
      'zbirenbaum/copilot.lua',
      event = 'InsertEnter',
      config = function()
        require('copilot').setup({
          suggestion = { enabled = false },
          panel = { enabled = false },
        })
      end,
    },
  }
end

return M 